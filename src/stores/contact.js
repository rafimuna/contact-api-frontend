// stores/contact.js
import { defineStore } from 'pinia'
import { ref } from 'vue'
import { api } from 'boot/axios' // тЬЕ Quasar boot file ржерзЗржХрзЗ configured axios instance

export const useContactStore = defineStore('contact', () => {
  // тЬи State
  const contacts = ref([]) // рж╕ржм contacts ржПржЦрж╛ржирзЗ array ржЖржХрж╛рж░рзЗ ржерж╛ржХржмрзЗ
  const loading = ref(false) // рж▓рзЛржбрж┐ржВ рж╕рзНржЯрзЗржЯ
  const error = ref(null) // error message

  // тЬЕ Contacts fetch ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
  const fetchContacts = async () => {
    loading.value = true
    error.value = null

    try {
      const response = await api.get('contact/') // ЁЯФЧ API call

      // тЪая╕П Backend ржпржжрж┐ object ржлрж░ржорзНржпрж╛ржЯрзЗ ржбрзЗржЯрж╛ ржжрзЗрзЯ (e.g. { "1": {...}, "2": {...} })
      // рждрж╛рж╣рж▓рзЗ ржЖржорж░рж╛ рж╕рзЗржЯрж╛ржХрзЗ array рждрзЗ рж░рзВржкрж╛ржирзНрждрж░ ржХрж░ржмрзЛ
      const dataObject = response.data
      contacts.value = Object.values(dataObject)

      // тЬЕ ржПржЦржи contacts.value рж╣рж▓ array: [ {...}, {...}, ... ]
    } catch (err) {
      error.value = 'Contacts load ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗ'
      console.error('Contact Fetch Error:', err)
    } finally {
      loading.value = false
    }
  }

  // ЁЯФБ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржЫрж┐ state ржПржмржВ ржлрж╛ржВрж╢ржи
  return {
    contacts,
    loading,
    error,
    fetchContacts,
  }
})
